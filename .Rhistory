with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1,2), mar = c(5,4,2,1)
)
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "east")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = myplot.pdf])
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income|region, state, c(4,1))
xyplot(Life.Exp ~ Income|region, state, layout = c(4,1))
xyplot(Life.Exp ~ Income|region, state, layout = c(2,3))
xyplot(Life.Exp ~ Income|region, state, layout = c(2,2)
)
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, dataset = mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone(ppb)", col.ax)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone(ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == 5)
?pch
?color
with(may, points(Wind, Ozone, pch = 2, color = "blue")
)
with(may, points(Wind, Ozone, pch = 17, color = "blue")
)
points(may$Wind, may$Ozone, pch = 17, color = "blue")
points(may$Wind, may$Ozone, pch = 17, col = "blue")
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month <> 5)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", c(17,8), c("blue", "red"), c("may, "Other Months"))
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months"))
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v=airquality$Wind, lty = 2, lwd = 2)
abline(v=median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3))
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Solar.R,, airquality$Ozone, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
?Devices
rows = 2075259
cols = 9
memory <- rows*cols*8
memory
memory/1024
memory_mb <- memory/1024
memory_gb <- memory_mb/1024
memory_gb
memory_gb <- memory/(1024*1024*1024)
memory_gb
setwd("~/R_WorkDir/Coursera/ExploratoryDataAnalysis/ExData_Plotting1")
memory_gb <- memory/(10^9)
memory_gb
filename <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
setwd("~/R_WorkDir/Coursera/ExploratoryDataAnalysis/ExData_Plotting1")
dataset <- download.file(filename)
?download.file
dataset <- download.file(filename, elecdata_full)
dataset <- download.file(filename, "elecdata_full")
dir()
elecdata <- unzip("elecdata_full")
dir
dir()
workingdata <- read_csv(elecdata)
head(work'')
head(workingdata)
workingdata <- read_csv(elecdata, ";")
head(workingdata)
workingdata <- read_delim(elecdata, ";")
workingdata <- read_delim(elecdata, ";", col_types = c(D, t, d, d, d, d, d, d, d))
head(workingdata)
dim(workingdata)
summary(workingdata)
workingdata <- read_delim(elecdata, delim = ";", col_types = c(D, t, d, d, d, d, d, d, d))
workingdata <- read_delim(elecdata, delim = ";", col_types = Dtddddddd))
workingdata <- read_delim(elecdata, delim = ";", col_types = "Dtddddddd")
workingdata <- read_delim(elecdata, delim = ";")
is.data.frame(workingdata)
class(workingdata)
head(workingdata)
workingdata %>% mutate(Date = as.Date(Date,"%m/%d/%y"))
workingdata <- read_delim(elecdata, delim = ";")
as.Date(workingdata$Date,"%m/%d/%y")
mydates <- as.Date(c("2007-06-22", "2004-02-13"))
mydates
as.Date(workingdata$Date)
workingdata <- read_delim(elecdata, delim = ";")
head(workingdata)
as.Date(workingdata$Date, "%d-%m-%Y")
head(workingdata)
install.packages("lubridate")
library(lubridate)
?lubridate
dmy(workingdata$Date)
head(workingdata)
workingdata <- read_delim(elecdata, delim = ";")
workingdata <- workingdata %>% mutate(DateFmt <- dmy(Date), TimeFmt <- hms(Time))
head(workingdata)
summary(workingdata)
plotdataset <- workingdata %>% filter(between(DateFmt, "2007-02-01", "2007-02-02")
)
plotdataset <- workingdata %>% filter(DateFmt = "2007-02-01")
plotdataset <- workingdata %>% filter(DateFmt == "2007-02-01")
head(workingdata)
workingdata <- read_delim(elecdata, delim = ";")
is.data.frame(workingdata)
workingdata <- workingdata %>% mutate(Date = dmy(Date), Time = hms(Time))
head(workingdata)
workingdata <- workingdata %>% mutate(DateTime = dmy(Date) + hms(Time))
head(workingdata)
workingdata <- read_delim(elecdata, delim = ";")
workingdata <- workingdata %>% mutate(DateTime = ymd_hms(paste(Date, Time, " ")))
workingdata <- workingdata %>% mutate(DateTime = paste(Date, Time, " "))
head(workingdata)
workingdata <- workingdata %>% mutate(DateTime = as.Date(paste(Date, Time, " ")))
head(workingdata)
workingdata <- workingdata %>% mutate(DateTime = dmy_hm(paste(Date, Time, " ")))
workingdata <- workingdata %>% mutate(DateTime = dmy_hm(paste(Date, Time, " ")))
workingdata <- read_delim(elecdata, delim = ";")
is.data.frame(workingdata)
workingdata <- workingdata %>% mutate(DateTime = paste(Date, Time, " "))
head(workingdata)
dim(workingdata)
workingdata$DateTime
workingdata <- workingdata %>% mutate(DateTime = paste(Date, Time, collapse = NULL))
workingdata$DateTime
workingdata <- workingdata %>% mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL)))
head(workingdata)
View(workingdata)
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL))) %>%
filter(DateTime = "2016-02-01") %>%
select(-(Date:Time))
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL))) %>%
filter(DateTime == "2016-02-01") %>%
select(-(Date:Time))
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL))) %>%
filter(DateTime == "2007-02-01") %>%
select(-(Date:Time))
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL))) %>%
filter(DateTime == "2007-02-01") %>%
select(-(Date:Time))
workingdata <- read_delim(elecdata, delim = ";")
is.data.frame(workingdata)
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL))) %>%
filter(DateTime == "2007-02-01") %>%
select(-(Date:Time))
head(workingdata)
workingdata <- read_delim(elecdata, delim = ";")
is.data.frame(workingdata)
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL)), Date = dmy(Date), Time = hms(Time)) %>%
filter(Date in ("2007-02-01", "2007-02-02"))
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL)), Date = dmy(Date), Time = hms(Time)) %>%
filter(Date == c("2007-02-01", "2007-02-02"))
workingdata <- read_delim(elecdata, delim = ";")
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL)), Date = dmy(Date), Time = hms(Time)) %>%
filter(Date >= "2007-02-01" & Date <= "2007-02-02")
head(workingdata)
View(workingdata)
hist(workingdata$Global_active_power, col = "red"))
hist(workingdata$Global_active_power, col = "red")
hist(workingdata$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
hist(workingdata$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
with(workingdata, plot(DateTime, Global_active_power))
with(workingdata, plot(DateTime, Global_active_power, type = "l"))
with(workingdata, plot(DateTime, Global_active_power, type = "l", main = "Global Active Power (kilowatts)"))
with(workingdata, plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
workingdata$Sub_metering_1
newdata <- select(workingdata, c(DateTime, Sub_metering_1))
newdata
newdata <- select(workingdata, c(DateTime, Sub_metering_1:Sub_metering_3))
newdata
plot(newdata)
plot(newdata$data)
plot(newdata$DateTime, newdata$Sub_metering_1)
plot(newdata$DateTime, newdata$Sub_metering_1, type = "l")
plot(newdata$DateTime, newdata$Sub_metering_2, type = "l")
plot(newdata$DateTime, newdata$Sub_metering_3, type = "l")
plot(pollution$latitude, ppm, col = pollution$region)
pollution
xyplot(Life.Exp ~ Income|region, state, layout = c(4,1))
install.packages(reshape2)
install.packages("reshape2")
library(reshape2)
newdata <- select(workingdata, c(DateTime, Sub_metering_1:Sub_metering_3))
newdata1 <- melt(newdata, idvar = "DateTime", variable.name = "meters")
View(newdata1)
newdata1 <- melt(newdata, id.vars = "DateTime")
newdata1 <- melt(newdata, id.vars = "DateTime", variable.name = "Meter_Readings")
newdata1 <- melt(newdata, id.vars = "DateTime", variable.name = "Meters", value.name = "Value")
newdata1 <- melt(newdata, id.vars = "DateTime", variable.name = "Meter_Location", value.name = "Value")
newdata1 <- melt(newdata, id.vars = "DateTime", variable.name = "Meter_Location", value.name = "Reading")
plot(newdata1)
plot(newdata1$, newdata1$Reading)
plot(newdata1$DateTime, newdata1$Reading)
?xyplot
xyplot(newdata1$DateTime ~ newdata1Reading, newdata1, groups = newdata1$Meter_Location)
xyplot(newdata1$DateTime ~ newdata1$Reading, newdata1, groups = newdata1$Meter_Location)
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location)
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, lty = 1)
xyplot(newdata1$DateTime ~ newdata1$Reading, newdata1, groups = newdata1$Meter_Location)
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location)
xyplot(newdata1$Reading~newdata1$DateTime, newdata1)
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location)
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l")
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", legend("topright"))
?legend
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"))
hist(workingdata$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
with(workingdata, plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), xlab = c("Thu", "Fri", "Sat"))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), labels = c("Thu", "Fri", "Sat"))
?scale
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales = list(x=c("Thu", "Fri", "Sat")))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales = list(x=c("Thu", "Fri", "Sat", "Sun")))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), xlim = c("Thu", "Fri", "Sat"))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), xlim = wday(newdata1$DateTime))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), xlim = day(newdata1$DateTime))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales = list(x = list(tick.number = 3))
)
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales = list(x = list(tick.number = 3)))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales = list(x = list(tick.number = 1)))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales = list(x = list(tick.number = 2)))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales = list(x = list(tick.number = 3)))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales = list(x = list(tick.number = 2)))
at <- c(1,2,3)
labels <- c("Thu", "Fri", "Sat")
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales = x=list(at=at, labels=labels))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales =list(x=list(at=at, labels=labels)))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"), scales =list(x=list(at=at)))
xyplot(newdata1$Reading~newdata1$DateTime, newdata1, groups = newdata1$Meter_Location, type = "l", col = c("black", "red", "blue"))
at <- 1:3
at
plot(newdata1$DateTime, newdata1$Sub_metering_1, type = "l")
plot(newdata1$Sub_metering_1, newdata1$DateTime, type = "l")
plot(newdata1$Sub_metering_1, newdata1$DateTime)
plot(newdata$Sub_metering_1, newdata$DateTime)
plot(newdata$DateTime, newdata$Sub_metering_1, type = "l")
lines(newdata$DateTime, newdata$Sub_metering_2, type = "l")
lines(newdata$DateTime, newdata$Sub_metering_3, type = "l")
with(workingdata, plot(DateTime, Sub_metering_1, type = "l", ylab = "Energy Sub Metering"), col = "black")
with(workingdata, lines(DateTime, Sub_metering_1), col = "red")
with(workingdata, lines(DateTime, Sub_metering_2), type = "l", col = "red")
?comment
lines(DateTime, Sub_metering_2, type = "l", col = "red")
with(workingdata, lines(DateTime, Sub_metering_2), type = "l", col = "red")
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
?pch
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
?lty
??lty
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = "")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = "1")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = "2")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 2)
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 4)
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 6)
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 8)
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 0)
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), seg.len = 3)
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), seg.len = 3)
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 2, seg.len = 3)
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 2, seg.len = 1)
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 2, seg.len = 1)
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 2, seg.len = 3)
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 2, lwd = 3)
dev.copy(png, file = "temp.png")
?devices
?Devices
if(dev.cur() == 1) dev.new()
dev.cur
dev.cur()
dev.cur()
png("temp1.png", width = 480, height = 480, bg = "white")
dev.cur()
hist(workingdata$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
dev.off()
hist(workingdata$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
setwd("~/R_WorkDir/Coursera/ExploratoryDataAnalysis/ExData_Plotting1")
filename <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(filename, "elecdata_full")
elecdata <- unzip("elecdata_full")
workingdata <- read_delim(elecdata, delim = ";")
is.data.frame(workingdata)
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL)), Date = dmy(Date), Time = hms(Time)) %>%
filter(Date >= "2007-02-01" & Date <= "2007-02-02")
png("Plot1.png", width = 480, height = 480, bg = "white")
hist(workingdata$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
dev.off()
setwd("~/R_WorkDir/Coursera/ExploratoryDataAnalysis/ExData_Plotting1")
filename <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(filename, "elecdata_full")
elecdata <- unzip("elecdata_full")
workingdata <- read_delim(elecdata, delim = ";")
#is.data.frame(workingdata)
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL)), Date = dmy(Date), Time = hms(Time)) %>%
filter(Date >= "2007-02-01" & Date <= "2007-02-02")
png("Plot2.png", width = 480, height = 480, bg = "white")
with(workingdata, plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
dev.off()
png("Plot3.png", width = 480, height = 480, bg = "white")
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 2, lwd = 3)
dev.off()
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 3)
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 2)
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black", xlab = "")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red", xlab = "")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue", xlab = "")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 2)
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black")
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
with(workingdata, plot(DateTime, Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black"))
with(workingdata, plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
with(workingdata, plot(DateTime, Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = "black"))
with(workingdata, plot(DateTime, Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = "black"))
hist(workingdata$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
png("Plot3.png", width = 480, height = 480, bg = "white")
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 2)
dev.off()
par(mfrow = c(2,2))
hist(workingdata$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
with(workingdata, plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", col = "black", xlab = "")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red", xlab = "")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue", xlab = "")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 2)
with(workingdata, plot(DateTime, Voltage, type = "l", ylab = "Voltage"))
par(mfrow = c(2,2))
hist(workingdata$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)")
with(workingdata, plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime"))
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 2)
with(workingdata, plot(DateTime, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power"))
par(mfrow = c(2,2))
hist(workingdata$Global_active_power, col = "red", main = "", xlab = "Global Active Power")
with(workingdata, plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime"))
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 2)
with(workingdata, plot(DateTime, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power"))
par(mfrow = c(2,2))
with(workingdata, plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power", xlab = ""))
with(workingdata, plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime"))
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 2)
with(workingdata, plot(DateTime, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power"))
setwd("~/R_WorkDir/Coursera/ExploratoryDataAnalysis/ExData_Plotting1")
filename <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(filename, "elecdata_full")
elecdata <- unzip("elecdata_full")
workingdata <- read_delim(elecdata, delim = ";")
is.data.frame(workingdata)
workingdata <- workingdata %>%
mutate(DateTime = dmy_hms(paste(Date, Time, collapse = NULL)), Date = dmy(Date), Time = hms(Time)) %>%
filter(Date >= "2007-02-01" & Date <= "2007-02-02")
png("Plot4.png", width = 480, height = 480, bg = "white")
par(mfrow = c(2,2))
with(workingdata, plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power", xlab = ""))
with(workingdata, plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime"))
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 2)
with(workingdata, plot(DateTime, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power"))
dev.off()
plot1.R
Rscript plot1.R
source('~/R_WorkDir/Coursera/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
install.packages("lubridate")
install.packages("readxl")
install.packages("XML")
install.packages("readr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("ggplot2")
install.packages("reshape2")
install.packages("readr")
install.packages("readxl")
install.packages("XML")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
install.packages("reshape2")
install.packages("XML")
install.packages("readxl")
install.packages("tidyr")
install.packages("readxl")
install.packages("XML")
install.packages("reshape2")
install.packages("dplyr")
install.packages("readxl")
install.packages("readxl")
install.packages("XML")
install.packages("reshape2")
install.packages("dplyr")
install.packages("XML")
install.packages("reshape2")
install.packages("dplyr")
png("plot2.png", width = 480, height = 480, bg = "white")
with(workingdata, plot(DateTime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)"))
dev.off()
png("plot3.png", width = 480, height = 480, bg = "white")
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 2)
dev.off()
png("plot4.png", width = 480, height = 480, bg = "white")
par(mfrow = c(2,2))
with(workingdata, plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power", xlab = ""))
with(workingdata, plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime"))
plot(workingdata$DateTime, workingdata$Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = "black")
lines(workingdata$DateTime, workingdata$Sub_metering_2, type = "l", ylab = "Energy Sub Metering", col = "red")
lines(workingdata$DateTime, workingdata$Sub_metering_3, type = "l", ylab = "Energy Sub Metering", col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 2)
with(workingdata, plot(DateTime, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power"))
dev.off()
